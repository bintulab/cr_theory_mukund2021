width = 4)
df = read.csv('../loop_simulations/response_peaks.csv')
unique(ka)
unique(df$ka)
library(patchwork)
library(ggExtra)
library(grid)
library(gridExtra)
library(latex2exp)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
df = read.csv('../loop_simulations/3f_response_peaks.csv')
df %>%
dplyr::mutate(adx = case_when(ad <= 0 ~ 0,
TRUE ~ ad)) -> newdf
p1 = ggplot(data = newdf)
p1 = p1 + geom_raster(aes(x = ka, y = ks, fill = pk))
p1 = p1 + scale_fill_viridis()
p1 = p1 + scale_fill_viridis(limits = c(0, 1.0), breaks = c(0, 0.5, 1.0))
p1 = p1 + coord_cartesian(xlim = c(0, 20),
ylim = c(0, 20),
expand = 0)
p1 = p1 + scale_x_continuous(breaks = c(0, 10, 20))
p1 = p1 + scale_y_continuous(breaks=c(0, 10, 20))
p1 = p1 + labs(x = TeX("$k_p$ (day$^{-1})"),
y = TeX("$k_s$ (day$^{-1})"),
fill = "Peak")
p1 = p1 + theme_cowplot()
p1 = p1 + theme(axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black"),
aspect.ratio = 1)
p1
ggsave("fig_3f.pdf",
p1,
dpi = 600,
height = 3,
width = 4)
df = read.csv('../loop_simulations/response_peaks.csv')
newdf %>%
dplyr::filter(ki == 0.5) %>%
dplyr::filter(ka %in% c(0.01:1.0:20.01, 0.05, 0.10, 0.25, 0.5, 1.0)) -> p2df
p2 = ggplot(data = p2df)
p2 = p2 + geom_point(aes(x = ka, y = adx, color = ks, group = ks), size = 1)
p2 = p2 + scale_y_log10(breaks = c(1, 10, 100))
p2 = p2 + scale_x_continuous(limits=c(0, 20), breaks=c(0, 10, 20))
p2 = p2 + scale_color_viridis(limits=c(0, 20.1), breaks = c(0, 10, 20))
p2 = p2 + labs(x = TeX("$k_p$ (day$^{-1})"),
y = "Response Half-Life (days)",
color = TeX("$k_s$ (day$^{-1})"))
p2 = p2 + theme_cowplot()
p2
df = read.csv('../loop_simulations/response_peaks.csv')
newdf %>%
dplyr::filter(ki == 0.5) %>%
dplyr::filter(ka %in% c(0.01:1.0:20.01, 0.05, 0.10, 0.25, 0.5, 1.0)) -> p2df
p2 = ggplot(data = p2df)
p2 = p2 + geom_point(aes(x = ka, y = adx, color = ks, group = ks), size = 1)
p2 = p2 + scale_y_log10(breaks = c(1, 10, 100))
p2 = p2 + scale_x_continuous(limits=c(0, 20), breaks=c(0, 10, 20))
p2 = p2 + scale_color_viridis(limits=c(0, 20.1), breaks = c(0, 10, 20))
p2 = p2 + labs(x = TeX("$k_p$ (day$^{-1})"),
y = "Response Half-Life (days)",
color = TeX("$k_s$ (day$^{-1})"))
p2 = p2 + theme_cowplot()
p2
df = read.csv('../loop_simulations/response_peaks.csv')
newdf %>%
dplyr::filter(ki == 0.5) %>%
dplyr::filter(ka %in% c(0.01:1.0:20.01, 0.05, 0.10, 0.25, 0.5, 1.0)) -> p2df
p2 = ggplot(data = p2df)
p2 = p2 + geom_point(aes(x = ka, y = adx, color = ks, group = ks), size = 1)
p2 = p2 + scale_y_log10(breaks = c(1, 10, 100))
p2 = p2 + scale_x_continuous(limits=c(0, 20), breaks=c(0, 10, 20))
p2 = p2 + scale_color_viridis(limits=c(0, 20.1), breaks = c(0, 10, 20))
p2 = p2 + labs(x = TeX("$k_p$ (day$^{-1})"),
y = "Response Half-Life (days)",
color = TeX("$k_s$ (day$^{-1})"))
p2 = p2 + theme_cowplot()
p2
df = read.csv('../loop_simulations/response_peaks.csv')
newdf %>%
dplyr::filter(ki == 0.5) -> p2df
p2 = ggplot(data = p2df)
p2 = p2 + geom_point(aes(x = ka, y = adx, color = ks, group = ks), size = 1)
p2 = p2 + scale_y_log10(breaks = c(1, 10, 100))
p2 = p2 + scale_x_continuous(limits=c(0, 20), breaks=c(0, 10, 20))
p2 = p2 + scale_color_viridis(limits=c(0, 20.1), breaks = c(0, 10, 20))
p2 = p2 + labs(x = TeX("$k_p$ (day$^{-1})"),
y = "Response Half-Life (days)",
color = TeX("$k_s$ (day$^{-1})"))
p2 = p2 + theme_cowplot()
p2
ggsave("fig_3g.pdf",
p2,
dpi = 600,
height = 3,
width = 4)
p2df$ka
p2_ks = c(
0.01,
0.01491934808934526,
0.022258694741105003,
0.03320852148570243,
0.04954494915776955,
0.07391783425536776,
0.11028058992663603,
0.16453145086138252,
0.24547019870459713,
0.36622553400346325,
0.5,
0.5463846221004016,
0.815170236778126,
1.2161808514566856,
1.8144625462478594,
2.707059832255154,
4.038756793609923,
6.025561845207439,
8.989745460252731,
13.412114175612182,
20.010000000000005,
)
p2_ks = c(
0.01,
0.01491934808934526,
0.022258694741105003,
0.03320852148570243,
0.04954494915776955,
0.07391783425536776,
0.11028058992663603,
0.16453145086138252,
0.24547019870459713,
0.36622553400346325,
0.5,
0.5463846221004016,
0.815170236778126,
1.2161808514566856,
1.8144625462478594,
2.707059832255154,
4.038756793609923,
6.025561845207439,
8.989745460252731,
13.412114175612182,
20.010000000000005
)
dplyr::filter(p2df, ka %in% p2_ks)
df = read.csv('../loop_simulations/response_peaks.csv')
newdf %>%
dplyr::filter(ki == 0.5) %>%
dplyr::filter(ka %in% p2_ks) -> p2df
p2 = ggplot(data = p2df)
p2 = p2 + geom_point(aes(x = ka, y = adx, color = ks, group = ks), size = 1)
p2 = p2 + scale_y_log10(breaks = c(1, 10, 100))
p2 = p2 + scale_x_continuous(limits=c(0, 20), breaks=c(0, 10, 20))
p2 = p2 + scale_color_viridis(limits=c(0, 20.1), breaks = c(0, 10, 20))
p2 = p2 + labs(x = TeX("$k_p$ (day$^{-1})"),
y = "Response Half-Life (days)",
color = TeX("$k_s$ (day$^{-1})"))
p2 = p2 + theme_cowplot()
p2
p2_ks
dplyr::filter(p2df, ka %in% p2_ks) -> testdf
testdf$ka
unique(p2df$ka)
newdf %>%
dplyr::filter(ki == 0.5) -> p2df
df = read.csv('../loop_simulations/response_peaks.csv')
newdf %>%
dplyr::filter(ki == 0.5) -> p2df
unique(p2df$ka)
unique(p2df$ka) -> p2_ks
p2_ks[seq(1, length(p2_ks), 2)]
df = read.csv('../loop_simulations/response_peaks.csv')
newdf %>%
dplyr::filter(ki == 0.5) -> p2df
p2_ks = unique(p2df$ka)
p2_ks = p2_ks[seq(1, length(p2_ks), 2)]
p2df = dplyr::filter(p2df, ka %in% p2_ks)
p2 = ggplot(data = p2df)
p2 = p2 + geom_point(aes(x = ka, y = adx, color = ks, group = ks), size = 1)
p2 = p2 + scale_y_log10(breaks = c(1, 10, 100))
p2 = p2 + scale_x_continuous(limits=c(0, 20), breaks=c(0, 10, 20))
p2 = p2 + scale_color_viridis(limits=c(0, 20.1), breaks = c(0, 10, 20))
p2 = p2 + labs(x = TeX("$k_p$ (day$^{-1})"),
y = "Response Half-Life (days)",
color = TeX("$k_s$ (day$^{-1})"))
p2 = p2 + theme_cowplot()
p2
df = read.csv('../loop_simulations/response_peaks.csv')
newdf %>%
dplyr::filter(ki == 0.5) -> p2df
p2_ks = unique(p2df$ka)
// p2_ks = p2_ks[seq(1, length(p2_ks), 2)]
p2df = dplyr::filter(p2df, ka %in% p2_ks)
p2 = ggplot(data = p2df)
p2 = p2 + geom_point(aes(x = ka, y = adx, color = ks, group = ks), size = 1)
p2 = p2 + scale_y_log10(breaks = c(1, 10, 100))
p2 = p2 + scale_x_continuous(limits=c(0, 20), breaks=c(0, 10, 20))
p2 = p2 + scale_color_viridis(limits=c(0, 20.1), breaks = c(0, 10, 20))
p2 = p2 + labs(x = TeX("$k_p$ (day$^{-1})"),
y = "Response Half-Life (days)",
color = TeX("$k_s$ (day$^{-1})"))
p2 = p2 + theme_cowplot()
p2
df = read.csv('../loop_simulations/20response_peaks.csv')
newdf %>%
dplyr::filter(ki == 0.5) -> p2df
p2_ks = unique(p2df$ka)
# p2_ks = p2_ks[seq(1, length(p2_ks), 2)]
p2df = dplyr::filter(p2df, ka %in% p2_ks)
p2 = ggplot(data = p2df)
p2 = p2 + geom_point(aes(x = ka, y = adx, color = ks, group = ks), size = 1)
p2 = p2 + scale_y_log10(breaks = c(1, 10, 100))
p2 = p2 + scale_x_continuous(limits=c(0, 20), breaks=c(0, 10, 20))
p2 = p2 + scale_color_viridis(limits=c(0, 20.1), breaks = c(0, 10, 20))
p2 = p2 + labs(x = TeX("$k_p$ (day$^{-1})"),
y = "Response Half-Life (days)",
color = TeX("$k_s$ (day$^{-1})"))
p2 = p2 + theme_cowplot()
p2
df = read.csv('../loop_simulations/20response_peaks.csv')
newdf %>%
dplyr::filter(ki == 0.5) -> p2df
p2_ks = unique(p2df$ka)
# p2_ks = p2_ks[seq(1, length(p2_ks), 2)]
p2df = dplyr::filter(p2df, ka %in% p2_ks)
p2 = ggplot(data = p2df)
p2 = p2 + geom_point(aes(x = ka, y = adx, color = ks, group = ks), size = 1)
p2 = p2 + scale_y_log10(breaks = c(1, 10, 100))
p2 = p2 + scale_x_continuous(limits=c(0, 20), breaks=c(0, 10, 20))
p2 = p2 + scale_color_viridis(limits=c(0, 20.1), breaks = c(0, 10, 20))
p2 = p2 + labs(x = TeX("$k_p$ (day$^{-1})"),
y = "Response Half-Life (days)",
color = TeX("$k_s$ (day$^{-1})"))
p2 = p2 + theme_cowplot()
p2
df = read.csv('../loop_simulations/20_response_peaks.csv')
newdf %>%
dplyr::filter(ki == 0.5) -> p2df
p2_ks = unique(p2df$ka)
# p2_ks = p2_ks[seq(1, length(p2_ks), 2)]
p2df = dplyr::filter(p2df, ka %in% p2_ks)
p2 = ggplot(data = p2df)
p2 = p2 + geom_point(aes(x = ka, y = adx, color = ks, group = ks), size = 1)
p2 = p2 + scale_y_log10(breaks = c(1, 10, 100))
p2 = p2 + scale_x_continuous(limits=c(0, 20), breaks=c(0, 10, 20))
p2 = p2 + scale_color_viridis(limits=c(0, 20.1), breaks = c(0, 10, 20))
p2 = p2 + labs(x = TeX("$k_p$ (day$^{-1})"),
y = "Response Half-Life (days)",
color = TeX("$k_s$ (day$^{-1})"))
p2 = p2 + theme_cowplot()
p2
df = read.csv('../loop_simulations/20_response_peaks.csv')
newdf %>%
dplyr::filter(ki == 0.5) -> p2df
# p2_ks = unique(p2df$ka)
# p2_ks = p2_ks[seq(1, length(p2_ks), 2)]
# p2df = dplyr::filter(p2df, ka %in% p2_ks)
p2 = ggplot(data = p2df)
p2 = p2 + geom_point(aes(x = ka, y = adx, color = ks, group = ks), size = 1)
p2 = p2 + scale_y_log10(breaks = c(1, 10, 100))
p2 = p2 + scale_x_continuous(limits=c(0, 20), breaks=c(0, 10, 20))
p2 = p2 + scale_color_viridis(limits=c(0, 20.1), breaks = c(0, 10, 20))
p2 = p2 + labs(x = TeX("$k_p$ (day$^{-1})"),
y = "Response Half-Life (days)",
color = TeX("$k_s$ (day$^{-1})"))
p2 = p2 + theme_cowplot()
p2
df = read.csv('../loop_simulations/20_response_peaks.csv')
newdf %>%
dplyr::filter(ki == 0.5) -> p2df
# p2_ks = unique(p2df$ka)
# p2_ks = p2_ks[seq(1, length(p2_ks), 2)]
# p2df = dplyr::filter(p2df, ka %in% p2_ks)
p2 = ggplot(data = p2df)
p2 = p2 + geom_point(aes(x = ka, y = adx, color = ks, group = ks), size = 1)
p2 = p2 + scale_y_log10(breaks = c(1, 10, 100))
p2 = p2 + scale_x_continuous(limits=c(0, 20), breaks=c(0, 10, 20))
p2 = p2 + scale_color_viridis(limits=c(0, 20.1), breaks = c(0, 10, 20))
p2 = p2 + labs(x = TeX("$k_p$ (day$^{-1})"),
y = "Response Half-Life (days)",
color = TeX("$k_s$ (day$^{-1})"))
p2 = p2 + theme_cowplot()
p2
df = read.csv('../loop_simulations/20_response_peaks.csv')
newdf %>%
dplyr::filter(ki == 0.5) -> p2df
# p2_ks = unique(p2df$ka)
# p2_ks = p2_ks[seq(1, length(p2_ks), 2)]
# p2df = dplyr::filter(p2df, ka %in% p2_ks)
p2 = ggplot(data = p2df)
p2 = p2 + geom_point(aes(x = ka, y = adx, color = ks, group = ks), size = 1)
p2 = p2 + scale_y_log10(breaks = c(1, 10, 100))
p2 = p2 + scale_x_continuous(limits=c(0, 20), breaks=c(0, 10, 20))
p2 = p2 + scale_color_viridis(limits=c(0, 20.1), breaks = c(0, 10, 20))
p2 = p2 + labs(x = TeX("$k_p$ (day$^{-1})"),
y = "Response Half-Life (days)",
color = TeX("$k_s$ (day$^{-1})"))
p2 = p2 + theme_cowplot()
p2
ggsave("fig_3g.pdf",
p2,
dpi = 600,
height = 3,
width = 4)
df = read.csv('../loop_simulations/20_response_peaks.csv')
newdf %>%
dplyr::filter(ki == 0.5) -> p2df
# p2_ks = unique(p2df$ka)
# p2_ks = p2_ks[seq(1, length(p2_ks), 2)]
# p2df = dplyr::filter(p2df, ka %in% p2_ks)
p2 = ggplot(data = p2df)
p2 = p2 + geom_point(aes(x = ka, y = adx, color = ks, group = ks), size = 1)
p2 = p2 + scale_y_log10(breaks = c(1, 10, 100))
p2 = p2 + scale_x_continuous(limits=c(0, 20), breaks=c(0, 10, 20))
p2 = p2 + scale_color_viridis(limits=c(0, 20.1), breaks = c(0, 10, 20))
p2 = p2 + labs(x = TeX("$k_p$ (day$^{-1})"),
y = "Response Half-Life (days)",
color = TeX("$k_s$ (day$^{-1})"))
p2 = p2 + theme_cowplot()
p2
ggsave("fig_3g.pdf",
p2,
dpi = 600,
height = 3,
width = 4)
df = read.csv('../loop_simulations/20_response_peaks.csv')
df %>%
dplyr::filter(ki == 0.5) -> p2df
# p2_ks = unique(p2df$ka)
# p2_ks = p2_ks[seq(1, length(p2_ks), 2)]
# p2df = dplyr::filter(p2df, ka %in% p2_ks)
p2 = ggplot(data = p2df)
p2 = p2 + geom_point(aes(x = ka, y = adx, color = ks, group = ks), size = 1)
p2 = p2 + scale_y_log10(breaks = c(1, 10, 100))
p2 = p2 + scale_x_continuous(limits=c(0, 20), breaks=c(0, 10, 20))
p2 = p2 + scale_color_viridis(limits=c(0, 20.1), breaks = c(0, 10, 20))
p2 = p2 + labs(x = TeX("$k_p$ (day$^{-1})"),
y = "Response Half-Life (days)",
color = TeX("$k_s$ (day$^{-1})"))
p2 = p2 + theme_cowplot()
p2
df = read.csv('../loop_simulations/20_response_peaks.csv')
df %>%
dplyr::filter(ki == 0.5) -> p2df
# p2_ks = unique(p2df$ka)
# p2_ks = p2_ks[seq(1, length(p2_ks), 2)]
# p2df = dplyr::filter(p2df, ka %in% p2_ks)
p2 = ggplot(data = p2df)
p2 = p2 + geom_point(aes(x = ka, y = ad, color = ks, group = ks), size = 1)
p2 = p2 + scale_y_log10(breaks = c(1, 10, 100))
p2 = p2 + scale_x_continuous(limits=c(0, 20), breaks=c(0, 10, 20))
p2 = p2 + scale_color_viridis(limits=c(0, 20.1), breaks = c(0, 10, 20))
p2 = p2 + labs(x = TeX("$k_p$ (day$^{-1})"),
y = "Response Half-Life (days)",
color = TeX("$k_s$ (day$^{-1})"))
p2 = p2 + theme_cowplot()
p2
source('~/Box/Aditya Mukund\'s Files/bintu/info-theory/theory_of_crs/final/cr-theory-with-data/figs_final/fig_3/fig_3_f-g.R', echo=TRUE)
p2df$ka
df = read.csv('../loop_simulations/20_response_peaks.csv')
df %>%
dplyr::mutate(adx = case_when(ad <= 0 ~ 0,
TRUE ~ ad)) -> newdf
newdf %>%
dplyr::filter(ki == 0.5) -> p2df
# p2_ks = unique(p2df$ka)
# p2_ks = p2_ks[seq(1, length(p2_ks), 2)]
# p2df = dplyr::filter(p2df, ka %in% p2_ks)
p2 = ggplot(data = p2df)
p2 = p2 + geom_point(aes(x = ka, y = ad, color = ks, group = ks), size = 1)
p2 = p2 + scale_y_log10(breaks = c(1, 10, 100))
p2 = p2 + scale_x_continuous(limits=c(0, 20), breaks=c(0, 10, 20))
p2 = p2 + scale_color_viridis(limits=c(0, 20.1), breaks = c(0, 10, 20))
p2 = p2 + labs(x = TeX("$k_p$ (day$^{-1})"),
y = "Response Half-Life (days)",
color = TeX("$k_s$ (day$^{-1})"))
p2 = p2 + theme_cowplot()
p2
p2df$ka
dplyr::filter(p2df, ka == 20.01)
dplyr::filter(p2df, ka > 10)
df = read.csv('../loop_simulations/20_response_peaks.csv')
df %>%
dplyr::mutate(adx = case_when(ad <= 0 ~ 0,
TRUE ~ ad)) -> newdf
newdf %>%
dplyr::filter(ki == 0.5) -> p2df
# p2_ks = unique(p2df$ka)
# p2_ks = p2_ks[seq(1, length(p2_ks), 2)]
# p2df = dplyr::filter(p2df, ka %in% p2_ks)
p2 = ggplot(data = p2df)
p2 = p2 + geom_point(aes(x = ka, y = ad, color = ks, group = ks), size = 1)
p2 = p2 + scale_y_log10(breaks = c(1, 10, 100))
p2 = p2 + scale_x_continuous(limits=c(0, 20.1), breaks=c(0, 10, 20))
p2 = p2 + scale_color_viridis(limits=c(0, 20.1), breaks = c(0, 10, 20))
p2 = p2 + labs(x = TeX("$k_p$ (day$^{-1})"),
y = "Response Half-Life (days)",
color = TeX("$k_s$ (day$^{-1})"))
p2 = p2 + theme_cowplot()
p2
df = read.csv('../loop_simulations/20_response_peaks.csv')
df %>%
dplyr::mutate(adx = case_when(ad <= 0 ~ 0,
TRUE ~ ad)) -> newdf
newdf %>%
dplyr::filter(ki == 0.5) -> p2df
# p2_ks = unique(p2df$ka)
# p2_ks = p2_ks[seq(1, length(p2_ks), 2)]
# p2df = dplyr::filter(p2df, ka %in% p2_ks)
p2 = ggplot(data = p2df)
p2 = p2 + geom_point(aes(x = ka, y = ad, color = ks, group = ks), size = 1)
p2 = p2 + scale_y_log10(breaks = c(1, 10, 100))
p2 = p2 + scale_x_continuous(limits=c(0, 20.1), breaks=c(0, 10, 20))
p2 = p2 + scale_color_viridis(limits=c(0, 20.1), breaks = c(0, 10, 20))
p2 = p2 + labs(x = TeX("$k_p$ (day$^{-1})"),
y = "Response Half-Life (days)",
color = TeX("$k_s$ (day$^{-1})"))
p2 = p2 + theme_cowplot()
p2
df = read.csv('../loop_simulations/20_response_peaks.csv')
df %>%
dplyr::mutate(adx = case_when(ad <= 0 ~ 0,
TRUE ~ ad)) -> newdf
newdf %>%
dplyr::filter(ki == 0.5) -> p2df
# p2_ks = unique(p2df$ka)
# p2_ks = p2_ks[seq(1, length(p2_ks), 2)]
# p2df = dplyr::filter(p2df, ka %in% p2_ks)
p2 = ggplot(data = p2df)
p2 = p2 + geom_point(aes(x = ka, y = ad, color = ks, group = ks), size = 1)
p2 = p2 + scale_y_log10(breaks = c(1, 10, 100))
p2 = p2 + scale_x_continuous(limits=c(0, 20.1), breaks=c(0, 10, 20))
p2 = p2 + scale_color_viridis(limits=c(0, 20.1), breaks = c(0, 10, 20))
p2 = p2 + labs(x = TeX("$k_p$ (day$^{-1})"),
y = "Response Half-Life (days)",
color = TeX("$k_s$ (day$^{-1})"))
p2 = p2 + theme_cowplot()
p2
df = read.csv('../loop_simulations/20_response_peaks.csv')
df %>%
dplyr::mutate(adx = case_when(ad <= 0 ~ 0,
TRUE ~ ad)) -> newdf
newdf %>%
dplyr::filter(ki == 0.5) -> p2df
# p2_ks = unique(p2df$ka)
# p2_ks = p2_ks[seq(1, length(p2_ks), 2)]
# p2df = dplyr::filter(p2df, ka %in% p2_ks)
p2 = ggplot(data = p2df)
p2 = p2 + geom_point(aes(x = ka, y = ad, color = ks, group = ks), size = 1)
p2 = p2 + scale_y_log10(breaks = c(1, 10, 100))
p2 = p2 + scale_x_continuous(limits=c(0, 20.1), breaks=c(0, 10, 20))
p2 = p2 + scale_color_viridis(limits=c(0, 20.1), breaks = c(0, 10, 20))
p2 = p2 + labs(x = TeX("$k_p$ (day$^{-1})"),
y = "Response Half-Life (days)",
color = TeX("$k_s$ (day$^{-1})"))
p2 = p2 + theme_cowplot()
p2
ggsave("fig_3g.pdf",
p2,
dpi = 600,
height = 3,
width = 4)
df = read.csv('../loop_simulations/20_response_peaks.csv')
df %>%
dplyr::mutate(adx = case_when(ad <= 0 ~ 0,
TRUE ~ ad)) -> newdf
newdf %>%
dplyr::filter(ki == 0.5) -> p2df
# p2_ks = unique(p2df$ka)
# p2_ks = p2_ks[seq(1, length(p2_ks), 2)]
# p2df = dplyr::filter(p2df, ka %in% p2_ks)
p2 = ggplot(data = p2df)
p2 = p2 + geom_point(aes(x = ka, y = ad, color = ks, group = ks), size = 1)
p2 = p2 + scale_y_log10(breaks = c(1, 10, 100))
p2 = p2 + scale_x_continuous(limits=c(0, 20.1), breaks=c(0, 10, 20))
p2 = p2 + scale_color_viridis(limits=c(0, 20.1), breaks = c(0, 10, 20))
p2 = p2 + labs(x = TeX("$k_p$ (day$^{-1})"),
y = "Response Half-Life (days)",
color = TeX("$k_s$ (day$^{-1})"))
p2 = p2 + theme_cowplot()
p2
ggsave("fig_3g.pdf",
p2,
dpi = 600,
height = 3,
width = 4)
source('~/Box/Aditya Mukund\'s Files/bintu/info-theory/theory_of_crs/final/cr-theory-with-data/figs_final/fig_s2/fig_s2b/fig_s2_b.R', echo=TRUE)
library(patchwork)
library(ggExtra)
library(grid)
library(gridExtra)
library(latex2exp)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
source('~/Box/Aditya Mukund\'s Files/bintu/info-theory/theory_of_crs/final/cr-theory-with-data/figs_final/fig_s2/figs2f-h.R', echo=TRUE)
source('~/Box/Aditya Mukund\'s Files/bintu/info-theory/theory_of_crs/final/cr-theory-with-data/figs_final/fig_s2/figs2f-h.R', echo=TRUE)
newdf %>%
dplyr::filter(ka == 1) -> p3df
p3 = ggplot(data = p3df)
p3 = p3 + geom_smooth(aes(x = ks, y = pk2, color = ki, group = ki), size = 1, se=F)
p3 = p3 + scale_color_viridis(limits = c(0, 2.1), breaks=c(0, 1, 2))
p3 = p3 + scale_x_continuous(limits=c(0, 20), breaks=c(0, 10, 20))
# p3 = p3 + scale_y_continuous(limits = c(0, 0.5), breaks=c(0, 0.25, 0.5))
p3 = p3 + scale_y_log10(breaks = c(0.000001, 0.001, 1),
labels = c(TeX("10^{-6}"),
TeX("10^{-3}"),
TeX("1")))
p3 = p3 + coord_cartesian(ylim=c(0.000001, 1))
p3 = p3 + labs(x = TeX("$k_s$ (day$^{-1})"),
y = "Second Response Peak",
color = TeX("$k_i$ (day$^{-1})"))
p3 = p3 + theme_cowplot()
p3
source('~/Box/Aditya Mukund\'s Files/bintu/info-theory/theory_of_crs/final/cr-theory-with-data/figs_final/fig_s2/figs2f-h.R', echo=TRUE)
